`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: DÅ¾emil DÅ¾igal
// 
// Create Date: 09/05/2024 10:21:40 PM
// Design Name: 
// Module Name: AddRoundKeyTestBench
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module AddRoundKeyTestBench;
    // input are reg, output are wire
    reg clk;
    reg rst;
    reg [0:127] input_state;
    reg [0:127] round_key;
    wire [0:127] output_state;
    wire valid_data;
    
    AddRoundKey ark(.clk(clk),
                    .rst(rst),
                    .input_state(input_state),
                    .round_key(round_key),
                    .output_state(output_state),
                    .valid_data(valid_data)
                    );
                    
    initial begin
        clk = 0;
        rst = 0;
        @(posedge clk);
        @(posedge clk);
        rst = 1;
        @(posedge clk);
        @(posedge clk);
        rst = 0;
        @(posedge clk);
        @(posedge clk);
        
        input_state = 128'h00000000000000000000000000000000;
        round_key = 128'h00000000000000000000000000000000;
        @(posedge clk);
        assert (output_state == 128'h00000000000000000000000000000000&& valid_data==1'b1);
        input_state = 128'h63636363636363636363636363636363;
        round_key = 128'h00000000000000000000000000000000;
        @(posedge clk);
        assert (output_state == 128'h63636363636363636363636363636363&& valid_data==1'b1);
        input_state = 128'hfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb;
        round_key = 128'h62636363626363636263636362636363;
        @(posedge clk);
        assert (output_state == 128'h99989898999898989998989899989898&& valid_data==1'b1);
        input_state = 128'h0deeeea50deeeea50deeeea50deeeea5;
        round_key = 128'haafbfbfbaafbfbfbaafbfbfbaafbfbfb;
        @(posedge clk);
        assert (output_state == 128'ha715155ea715155ea715155ea715155e&& valid_data==1'b1);
        input_state = 128'h525d5f54525d5f54525d5f54525d5f54;
        round_key = 128'h6f6c6ccf0d0f0fac6f6c6ccf0d0f0fac;
        @(posedge clk);
        assert (output_state == 128'h3d31339b5f5250f83d31339b5f5250f8&& valid_data==1'b1);
        input_state = 128'hcc38792890bb92f6cc38792890bb92f6;
        round_key = 128'h7d8d8d6ad77676917d8d8d6ad7767691;
        @(posedge clk);
        assert (output_state == 128'hb1b5f44247cde467b1b5f44247cde467&& valid_data==1'b1);
        input_state = 128'h6df684507a86d31f6df684507a86d31f;
        round_key = 128'h5354edc15e5be26d31378ea23c38810e;
        @(posedge clk);
        assert (output_state == 128'h3ea2699124dd31725cc10af246be5211&& valid_data==1'b1);
        input_state = 128'hc20020746547d63bc45dcd09b4f5751a;
        round_key = 128'h968a81c141fcf7503c717a3aeb070cab;
        @(posedge clk);
        assert (output_state == 128'h548aa1b524bb216bf82cb7335ff279b1&& valid_data==1'b1);
        input_state = 128'h04c7c0a89cc0542c4f612d8639ec0e54;
        round_key = 128'h9eaa8f28c0f16d45f1c6e3e7cdfe62e9;
        @(posedge clk);
        assert (output_state == 128'h9a6d4f805c313969bea7ce61f4126cbd&& valid_data==1'b1);
        input_state = 128'hc8d1fc6bedcffa537a49644ddc1e8d31;
        round_key = 128'h2b312bdf6acddc8f56bca6b5bdbbaa1e;
        @(posedge clk);
        assert (output_state == 128'he3e0d7b4870226dc2cf5c2f861a5272f&& valid_data==1'b1);
        input_state = 128'h8b85134b5e02fe1260e9fa8c4b7538be;
        round_key = 128'h6406fd52a4f79017553173f098cf1119;
        @(posedge clk);
        assert (output_state == 128'hef83ee19faf56e0535d8897cd3ba29a7&& valid_data==1'b1);
        input_state = 128'h6fa6888388cf7a0073768fab6c0f9ff9;
        round_key = 128'h6dbba90b0776758451cad331ec71792f;
        @(posedge clk);
        assert (output_state == 128'h021d21888fb90f8422bc5c9a807ee6d6&& valid_data==1'b1);
        input_state = 128'ha8f3b47203f446ed912d601eb8bc56f5;
        round_key = 128'he7b0e89c4347788b16760b7b8eb91a62;
        @(posedge clk);
        assert (output_state == 128'h4f435cee40b33e66875b6b6536054c97&& valid_data==1'b1);
        input_state = 128'h5357948e58281a5bea2cbd7edbb1b73d;
        round_key = 128'h74ed0ba1739b7e252251ad14ce20d43b;
        @(posedge clk);
        assert (output_state == 128'h27ba9f2f2bb3647ec87d106a15916306&& valid_data==1'b1);
        input_state = 128'hcc6dca6ff1fffb15e881dbf359f44302;
        round_key = 128'h10f80a1753bf729c45c979e7cb706385;
        @(posedge clk);
        assert (output_state == 128'hdc95c078a2408989ad48a21492842087&& valid_data==1'b1);
        input_state = 128'h00000000000000000000000000000000;
        round_key = 128'h000102030405060708090a0b0c0d0e0f;
        @(posedge clk);
        assert (output_state == 128'h000102030405060708090a0b0c0d0e0f&& valid_data==1'b1);
        input_state = 128'h6a6a5c452c6d3351b0d95d61279c215c;
        round_key = 128'h101112131415161718191a1b1c1d1e1f;
        @(posedge clk);
        assert (output_state == 128'h7a7b4e5638782546a8c0477a3b813f43&& valid_data==1'b1);
        input_state = 128'hca58135d1f469fbffef17eca593bc88c;
        round_key = 128'ha573c29fa176c498a97fce93a572c09c;
        @(posedge clk);
        assert (output_state == 128'h6f2bd1c2be305b27578eb059fc490810&& valid_data==1'b1);
        input_state = 128'h6a583c8f79e9b88a09a3536b81c9758e;
        round_key = 128'h1651a8cd0244beda1a5da4c10640bade;
        @(posedge clk);
        assert (output_state == 128'h7c0994427bad065013fef7aa8789cf50&& valid_data==1'b1);
        input_state = 128'hbfcaa06b32e5e10a791d6ba4ee082714;
        round_key = 128'hae87dff00ff11b68a68ed5fb03fc1567;
        @(posedge clk);
        assert (output_state == 128'h114d7f9b3d14fa62df93be5fedf43273&& valid_data==1'b1);
        input_state = 128'h2b0bb5cc06f581be853c7b9b7630a6b4;
        round_key = 128'h6de1f1486fa54f9275f8eb5373b8518d;
        @(posedge clk);
        assert (output_state == 128'h46ea44846950ce2cf0c490c80588f739&& valid_data==1'b1);
        input_state = 128'h334efff9fa26d4da3e43edb22710c27a;
        round_key = 128'hc656827fc9a799176f294cec6cd5598b;
        @(posedge clk);
        assert (output_state == 128'hf5187d8633814dcd516aa15e4bc59bf1&& valid_data==1'b1);
        input_state = 128'h50097656cbbf25c00a214e502a942b30;
        round_key = 128'h3de23a75524775e727bf9eb45407cf39;
        @(posedge clk);
        assert (output_state == 128'h6deb4c2399f850272d9ed0e47e93e409&& valid_data==1'b1);
        input_state = 128'hca2f9e7795655d0731cc1905e7a60766;
        round_key = 128'h0bdc905fc27b0948ad5245a4c1871c2f;
        @(posedge clk);
        assert (output_state == 128'hc1f30e28571e544f9c9e5ca126211b49&& valid_data==1'b1);
        input_state = 128'h1779d3c630934921945df93cf0bfec4b;
        round_key = 128'h45f5a66017b2d387300d4d33640a820a;
        @(posedge clk);
        assert (output_state == 128'h528c75a627219aa6a450b40f94b56e41&& valid_data==1'b1);
        input_state = 128'h12ee626dcdf4d6cb4f60d1db264fb756;
        round_key = 128'h7ccff71cbeb4fe5413e6bbf0d261a7df;
        @(posedge clk);
        assert (output_state == 128'h6e2195717340289f5c866a2bf42e1089&& valid_data==1'b1);
        input_state = 128'h9b2c60e4a0e1ba59368d5968bcf322ea;
        round_key = 128'hf01afafee7a82979d7a5644ab3afe640;
        @(posedge clk);
        assert (output_state == 128'h6b369a1a47499320e1283d220f5cc4aa&& valid_data==1'b1);
        input_state = 128'h38cce5deb94e518c3a081b94ac907e7e;
        round_key = 128'h2541fe719bf500258813bbd55a721c0a;
        @(posedge clk);
        assert (output_state == 128'h1d8d1baf22bb51a9b21ba041f6e26274&& valid_data==1'b1);
        input_state = 128'h04c238c2044af859a12584d331133857;
        round_key = 128'h4e5a6699a9f24fe07e572baacdf8cdea;
        @(posedge clk);
        assert (output_state == 128'h4a985e5badb8b7b9df72af79fcebf5bd&& valid_data==1'b1);
        input_state = 128'hd66c797a9540e6399ee95856b046a9b6;
        round_key = 128'h24fc79ccbf0979e9371ac23c6d68de36;
        @(posedge clk);
        assert (output_state == 128'hf29000b62a499fd0a9f39a6add2e7780&& valid_data==1'b1);
        input_state = 128'h00112233445566778899aabbccddeeff;
        round_key = 128'h000102030405060708090a0b0c0d0e0f;
        @(posedge clk);
        assert (output_state == 128'h00102030405060708090a0b0c0d0e0f0&& valid_data==1'b1);
        input_state = 128'h5f72641557f5bc92f7be3b291db9f91a;
        round_key = 128'h101112131415161718191a1b1c1d1e1f;
        @(posedge clk);
        assert (output_state == 128'h4f63760643e0aa85efa7213201a4e705&& valid_data==1'b1);
        input_state = 128'hbd2a395d2b6ac438d192443e615da195;
        round_key = 128'ha573c29fa176c498a97fce93a572c09c;
        @(posedge clk);
        assert (output_state == 128'h1859fbc28a1c00a078ed8aadc42f6109&& valid_data==1'b1);
        input_state = 128'h810dce0cc9db8172b3678c1e88a1b5bd;
        round_key = 128'h1651a8cd0244beda1a5da4c10640bade;
        @(posedge clk);
        assert (output_state == 128'h975c66c1cb9f3fa8a93a28df8ee10f63&& valid_data==1'b1);
        input_state = 128'hb2822d81abe6fb275faf103a078c0033;
        round_key = 128'hae87dff00ff11b68a68ed5fb03fc1567;
        @(posedge clk);
        assert (output_state == 128'h1c05f271a417e04ff921c5c104701554&& valid_data==1'b1);
        input_state = 128'haeb65ba974e0f822d73f567bdb64c877;
        round_key = 128'h6de1f1486fa54f9275f8eb5373b8518d;
        @(posedge clk);
        assert (output_state == 128'hc357aae11b45b7b0a2c7bd28a8dc99fa&& valid_data==1'b1);
        input_state = 128'hb951c33c02e9bd29ae25cdb1efa08cc7;
        round_key = 128'hc656827fc9a799176f294cec6cd5598b;
        @(posedge clk);
        assert (output_state == 128'h7f074143cb4e243ec10c815d8375d54c&& valid_data==1'b1);
        input_state = 128'hebb19e1c3ee7c9e87d7535e9ed6b9144;
        round_key = 128'h3de23a75524775e727bf9eb45407cf39;
        @(posedge clk);
        assert (output_state == 128'hd653a4696ca0bc0f5acaab5db96c5e7d&& valid_data==1'b1);
        input_state = 128'h5174c8669da98435a8b3e62ca974a5ea;
        round_key = 128'h0bdc905fc27b0948ad5245a4c1871c2f;
        @(posedge clk);
        assert (output_state == 128'h5aa858395fd28d7d05e1a38868f3b9c5&& valid_data==1'b1);
        input_state = 128'h0f77ee31d2ccadc05430a83f4ef96ac3;
        round_key = 128'h45f5a66017b2d387300d4d33640a820a;
        @(posedge clk);
        assert (output_state == 128'h4a824851c57e7e47643de50c2af3e8c9&& valid_data==1'b1);
        input_state = 128'hbd86f0ea748fc4f4630f11c1e9331233;
        round_key = 128'h7ccff71cbeb4fe5413e6bbf0d261a7df;
        @(posedge clk);
        assert (output_state == 128'hc14907f6ca3b3aa070e9aa313b52b5ec&& valid_data==1'b1);
        input_state = 128'haf8690415d6e1dd387e5fbedd5c89013;
        round_key = 128'hf01afafee7a82979d7a5644ab3afe640;
        @(posedge clk);
        assert (output_state == 128'h5f9c6abfbac634aa50409fa766677653&& valid_data==1'b1);
        input_state = 128'h7427fae4d8a695269ce83d315be0392b;
        round_key = 128'h2541fe719bf500258813bbd55a721c0a;
        @(posedge clk);
        assert (output_state == 128'h516604954353950314fb86e401922521&& valid_data==1'b1);
        input_state = 128'h2c21a820306f154ab712c75eee0da04f;
        round_key = 128'h4e5a6699a9f24fe07e572baacdf8cdea;
        @(posedge clk);
        assert (output_state == 128'h627bceb9999d5aaac945ecf423f56da5&& valid_data==1'b1);
        input_state = 128'haa5ece06ee6e3c56dde68bac2621bebf;
        round_key = 128'h24fc79ccbf0979e9371ac23c6d68de36;
        @(posedge clk);
        assert (output_state == 128'h8ea2b7ca516745bfeafc49904b496089&& valid_data==1'b1);
        input_state = 128'h00000000000000000000000000000000;
        round_key = 128'h000102030405060708090a0b0c0d0e0f;
        @(posedge clk);
        assert (output_state == 128'h000102030405060708090a0b0c0d0e0f&& valid_data==1'b1);
        input_state = 128'h6a6a5c452c6d3351b0d95d61279c215c;
        round_key = 128'h101112131415161718191a1b1c1d1e1f;
        @(posedge clk);
        assert (output_state == 128'h7a7b4e5638782546a8c0477a3b813f43&& valid_data==1'b1);
        input_state = 128'hca58135d1f469fbffef17eca593bc88c;
        round_key = 128'ha573c29fa176c498a97fce93a572c09c;
        @(posedge clk);
        assert (output_state == 128'h6f2bd1c2be305b27578eb059fc490810&& valid_data==1'b1);
        input_state = 128'h6a583c8f79e9b88a09a3536b81c9758e;
        round_key = 128'h1651a8cd0244beda1a5da4c10640bade;
        @(posedge clk);
        assert (output_state == 128'h7c0994427bad065013fef7aa8789cf50&& valid_data==1'b1);
        input_state = 128'hbfcaa06b32e5e10a791d6ba4ee082714;
        round_key = 128'hae87dff00ff11b68a68ed5fb03fc1567;
        @(posedge clk);
        assert (output_state == 128'h114d7f9b3d14fa62df93be5fedf43273&& valid_data==1'b1);
        input_state = 128'h2b0bb5cc06f581be853c7b9b7630a6b4;
        round_key = 128'h6de1f1486fa54f9275f8eb5373b8518d;
        @(posedge clk);
        assert (output_state == 128'h46ea44846950ce2cf0c490c80588f739&& valid_data==1'b1);
        input_state = 128'h334efff9fa26d4da3e43edb22710c27a;
        round_key = 128'hc656827fc9a799176f294cec6cd5598b;
        @(posedge clk);
        assert (output_state == 128'hf5187d8633814dcd516aa15e4bc59bf1&& valid_data==1'b1);
        input_state = 128'h50097656cbbf25c00a214e502a942b30;
        round_key = 128'h3de23a75524775e727bf9eb45407cf39;
        @(posedge clk);
        assert (output_state == 128'h6deb4c2399f850272d9ed0e47e93e409&& valid_data==1'b1);
        input_state = 128'hca2f9e7795655d0731cc1905e7a60766;
        round_key = 128'h0bdc905fc27b0948ad5245a4c1871c2f;
        @(posedge clk);
        assert (output_state == 128'hc1f30e28571e544f9c9e5ca126211b49&& valid_data==1'b1);
        input_state = 128'h1779d3c630934921945df93cf0bfec4b;
        round_key = 128'h45f5a66017b2d387300d4d33640a820a;
        @(posedge clk);
        assert (output_state == 128'h528c75a627219aa6a450b40f94b56e41&& valid_data==1'b1);
        input_state = 128'h12ee626dcdf4d6cb4f60d1db264fb756;
        round_key = 128'h7ccff71cbeb4fe5413e6bbf0d261a7df;
        @(posedge clk);
        assert (output_state == 128'h6e2195717340289f5c866a2bf42e1089&& valid_data==1'b1);
        input_state = 128'h9b2c60e4a0e1ba59368d5968bcf322ea;
        round_key = 128'hf01afafee7a82979d7a5644ab3afe640;
        @(posedge clk);
        assert (output_state == 128'h6b369a1a47499320e1283d220f5cc4aa&& valid_data==1'b1);
        input_state = 128'h38cce5deb94e518c3a081b94ac907e7e;
        round_key = 128'h2541fe719bf500258813bbd55a721c0a;
        @(posedge clk);
        assert (output_state == 128'h1d8d1baf22bb51a9b21ba041f6e26274&& valid_data==1'b1);
        input_state = 128'h04c238c2044af859a12584d331133857;
        round_key = 128'h4e5a6699a9f24fe07e572baacdf8cdea;
        @(posedge clk);
        assert (output_state == 128'h4a985e5badb8b7b9df72af79fcebf5bd&& valid_data==1'b1);
        input_state = 128'hd66c797a9540e6399ee95856b046a9b6;
        round_key = 128'h24fc79ccbf0979e9371ac23c6d68de36;
        @(posedge clk);
        assert (output_state == 128'hf29000b62a499fd0a9f39a6add2e7780&& valid_data==1'b1);
        input_state = 128'h8ea2b7ca516745bfeafc49904b496089;
        round_key = 128'h24fc79ccbf0979e9371ac23c6d68de36;
        @(posedge clk);
        assert (output_state == 128'haa5ece06ee6e3c56dde68bac2621bebf&& valid_data==1'b1);
        input_state = 128'h627bceb9999d5aaac945ecf423f56da5;
        round_key = 128'h4e5a6699a9f24fe07e572baacdf8cdea;
        @(posedge clk);
        assert (output_state == 128'h2c21a820306f154ab712c75eee0da04f&& valid_data==1'b1);
        input_state = 128'h516604954353950314fb86e401922521;
        round_key = 128'h2541fe719bf500258813bbd55a721c0a;
        @(posedge clk);
        assert (output_state == 128'h7427fae4d8a695269ce83d315be0392b&& valid_data==1'b1);
        input_state = 128'h5f9c6abfbac634aa50409fa766677653;
        round_key = 128'hf01afafee7a82979d7a5644ab3afe640;
        @(posedge clk);
        assert (output_state == 128'haf8690415d6e1dd387e5fbedd5c89013&& valid_data==1'b1);
        input_state = 128'hc14907f6ca3b3aa070e9aa313b52b5ec;
        round_key = 128'h7ccff71cbeb4fe5413e6bbf0d261a7df;
        @(posedge clk);
        assert (output_state == 128'hbd86f0ea748fc4f4630f11c1e9331233&& valid_data==1'b1);
        input_state = 128'h4a824851c57e7e47643de50c2af3e8c9;
        round_key = 128'h45f5a66017b2d387300d4d33640a820a;
        @(posedge clk);
        assert (output_state == 128'h0f77ee31d2ccadc05430a83f4ef96ac3&& valid_data==1'b1);
        input_state = 128'h5aa858395fd28d7d05e1a38868f3b9c5;
        round_key = 128'h0bdc905fc27b0948ad5245a4c1871c2f;
        @(posedge clk);
        assert (output_state == 128'h5174c8669da98435a8b3e62ca974a5ea&& valid_data==1'b1);
        input_state = 128'hd653a4696ca0bc0f5acaab5db96c5e7d;
        round_key = 128'h3de23a75524775e727bf9eb45407cf39;
        @(posedge clk);
        assert (output_state == 128'hebb19e1c3ee7c9e87d7535e9ed6b9144&& valid_data==1'b1);
        input_state = 128'h7f074143cb4e243ec10c815d8375d54c;
        round_key = 128'hc656827fc9a799176f294cec6cd5598b;
        @(posedge clk);
        assert (output_state == 128'hb951c33c02e9bd29ae25cdb1efa08cc7&& valid_data==1'b1);
        input_state = 128'hc357aae11b45b7b0a2c7bd28a8dc99fa;
        round_key = 128'h6de1f1486fa54f9275f8eb5373b8518d;
        @(posedge clk);
        assert (output_state == 128'haeb65ba974e0f822d73f567bdb64c877&& valid_data==1'b1);
        input_state = 128'h1c05f271a417e04ff921c5c104701554;
        round_key = 128'hae87dff00ff11b68a68ed5fb03fc1567;
        @(posedge clk);
        assert (output_state == 128'hb2822d81abe6fb275faf103a078c0033&& valid_data==1'b1);
        input_state = 128'h975c66c1cb9f3fa8a93a28df8ee10f63;
        round_key = 128'h1651a8cd0244beda1a5da4c10640bade;
        @(posedge clk);
        assert (output_state == 128'h810dce0cc9db8172b3678c1e88a1b5bd&& valid_data==1'b1);
        input_state = 128'h1859fbc28a1c00a078ed8aadc42f6109;
        round_key = 128'ha573c29fa176c498a97fce93a572c09c;
        @(posedge clk);
        assert (output_state == 128'hbd2a395d2b6ac438d192443e615da195&& valid_data==1'b1);
        input_state = 128'h4f63760643e0aa85efa7213201a4e705;
        round_key = 128'h101112131415161718191a1b1c1d1e1f;
        @(posedge clk);
        assert (output_state == 128'h5f72641557f5bc92f7be3b291db9f91a&& valid_data==1'b1);
        input_state = 128'h00102030405060708090a0b0c0d0e0f0;
        round_key = 128'h000102030405060708090a0b0c0d0e0f;
        @(posedge clk);
        assert (output_state == 128'h00112233445566778899aabbccddeeff&& valid_data==1'b1);
        input_state = 128'h00000000000000000000000000000000;
        round_key = 128'h54686973497354686542657374506173;
        @(posedge clk);
        assert (output_state == 128'h54686973497354686542657374506173&& valid_data==1'b1);
        input_state = 128'h087dbfa762c6588bd3be38f75ff71dcd;
        round_key = 128'h73776f72644943616e5468696e6b4f66;
        @(posedge clk);
        assert (output_state == 128'h7b0ad0d5068f1beabdea509e319c52ab&& valid_data==1'b1);
        input_state = 128'he65052874f79ed307acad63598e8f88c;
        round_key = 128'h2aec5aec639f0e8406dd6bf7728d0a84;
        @(posedge clk);
        assert (output_state == 128'hccbc086b2ce6e3b47c17bdc2ea65f208&& valid_data==1'b1);
        input_state = 128'h55f261491f7509144a57b14c8e5bafac;
        round_key = 128'h332a082d57634b4c39372325575c6c43;
        @(posedge clk);
        assert (output_state == 128'h66d869644816425873609269d907c3ef&& valid_data==1'b1);
        input_state = 128'h3fb390f8a2d81b8ec2641d621c7a1cfb;
        round_key = 128'h62bc40b701234e3307fe25c475732f40;
        @(posedge clk);
        assert (output_state == 128'h5d0fd04fa3fb55bdc59a38a6690933bb&& valid_data==1'b1);
        input_state = 128'h64b1681380bbb8765e4ec974ab2e00d2;
        round_key = 128'haea51d24f9c65668c0f1754d97ad190e;
        @(posedge clk);
        assert (output_state == 128'hca147537797dee1e9ebfbc393c8319dc&& valid_data==1'b1);
        input_state = 128'h11b8d011215bb832d6065088e26e77d0;
        round_key = 128'hf368eb3ff24ba50cf5b580c880c6af88;
        @(posedge clk);
        assert (output_state == 128'he2d03b2ed3101d3e23b3d04062a8d858&& valid_data==1'b1);
        input_state = 128'h74ed0cdd2b2e9ac44136f63572b49223;
        round_key = 128'h631164e09ad732885a2647c5cd8b5ecb;
        @(posedge clk);
        assert (output_state == 128'h17fc683db1f9a84c1b10b1f0bf3fcce8&& valid_data==1'b1);
        input_state = 128'h18015477a2bdfd8cb6a32b8895a2a869;
        round_key = 128'hc630f482347b518ec1ced14641087ece;
        @(posedge clk);
        assert (output_state == 128'hde31a0f596c6ac02776dfaced4aad6a7&& valid_data==1'b1);
        input_state = 128'h8c4517066f0f6ab689fa1ba6d8fe3083;
        round_key = 128'he021976b7af6a5e320d0e226ed5bbced;
        @(posedge clk);
        assert (output_state == 128'h6c64806d15f9cf55a92af98035a58c6e&& valid_data==1'b1);
        input_state = 128'h16565ad5de183012866f4b46b55896e9;
        round_key = 128'hef55a1d7db2ef0591ae0211f5be85fd1;
        @(posedge clk);
        assert (output_state == 128'hf903fb020536c04b9c8f6a59eeb0c938&& valid_data==1'b1);
        input_state = 128'h239291b9e98620fd29a9e9ecacc07a34;
        round_key = 128'hd9ba5855a34cfdb6839c1f906ec7a37d;
        @(posedge clk);
        assert (output_state == 128'hfa28c9ec4acadd4baa35f67cc207d949&& valid_data==1'b1);
        input_state = 128'hbf389037ed70634579f2068ac705b8ba;
        round_key = 128'h095f5e48d271ae11c8918f0e9379d0df;
        @(posedge clk);
        assert (output_state == 128'hb667ce7f3f01cd54b1638984547c6865&& valid_data==1'b1);
        input_state = 128'hf209b0936b85699e104eb59836b225e6;
        round_key = 128'h050c28cba640d57d25dccaed4b1b6990;
        @(posedge clk);
        assert (output_state == 128'hf7059858cdc5bce335927f757da94c76&& valid_data==1'b1);
        input_state = 128'h68a6d238bd4f296a96d34611ff6b659d;
        round_key = 128'he6a63efb34d790eafc461fe46f3fcf3b;
        @(posedge clk);
        assert (output_state == 128'h8e00ecc38998b9806a9559f59054aaa6&& valid_data==1'b1);
        input_state = 128'h48656c6c6f20776f726c642120203a29;
        round_key = 128'h54686973497354686542657374506173;
        @(posedge clk);
        assert (output_state == 128'h1c0d051f26532307172e015254705b5a&& valid_data==1'b1);
        input_state = 128'hcd6750495f1eef91a62a23a004ffbb91;
        round_key = 128'h73776f72644943616e5468696e6b4f66;
        @(posedge clk);
        assert (output_state == 128'hbe103f3b3b57acf0c87e4bc96a94f4f7&& valid_data==1'b1);
        input_state = 128'h71be30d18c2749ae54bfaf770df88dfc;
        round_key = 128'h2aec5aec639f0e8406dd6bf7728d0a84;
        @(posedge clk);
        assert (output_state == 128'h5b526a3defb8472a5262c4807f758778&& valid_data==1'b1);
        input_state = 128'h6679b258708e32895bc2ad4ed2e4c54c;
        round_key = 128'h332a082d57634b4c39372325575c6c43;
        @(posedge clk);
        assert (output_state == 128'h5553ba7527ed79c562f58e6b85b8a90f&& valid_data==1'b1);
        input_state = 128'h730b01bffce82b5ba9d3c42ad0e88c07;
        round_key = 128'h62bc40b701234e3307fe25c475732f40;
        @(posedge clk);
        assert (output_state == 128'h11b74108fdcb6568ae2de1eea59ba347&& valid_data==1'b1);
        input_state = 128'h660f8d21e1d1c84e2917222a89b04dbe;
        round_key = 128'haea51d24f9c65668c0f1754d97ad190e;
        @(posedge clk);
        assert (output_state == 128'hc8aa900518179e26e9e657671e1d54b0&& valid_data==1'b1);
        input_state = 128'h7c199c5d83a1de945c1a781385a95c20;
        round_key = 128'hf368eb3ff24ba50cf5b580c880c6af88;
        @(posedge clk);
        assert (output_state == 128'h8f71776271ea7b98a9aff8db056ff3a8&& valid_data==1'b1);
        input_state = 128'hf7672bcc71ec25c5edda40bfb0ec5a56;
        round_key = 128'h631164e09ad732885a2647c5cd8b5ecb;
        @(posedge clk);
        assert (output_state == 128'h94764f2ceb3b174db7fc077a7d67049d&& valid_data==1'b1);
        input_state = 128'he2f7b3fd81ee3580bacc013c875e497d;
        round_key = 128'hc630f482347b518ec1ced14641087ece;
        @(posedge clk);
        assert (output_state == 128'h24c7477fb595640e7b02d07ac65637b3&& valid_data==1'b1);
        input_state = 128'h0f9f4bda605ce03681082d3fbb3c81ed;
        round_key = 128'he021976b7af6a5e320d0e226ed5bbced;
        @(posedge clk);
        assert (output_state == 128'hefbedcb11aaa45d5a1d8cf1956673d00&& valid_data==1'b1);
        input_state = 128'ha37ad99a13c1ce3075b1a5532a90a4bb;
        round_key = 128'hef55a1d7db2ef0591ae0211f5be85fd1;
        @(posedge clk);
        assert (output_state == 128'h4c2f784dc8ef3e696f51844c7178fb6a&& valid_data==1'b1);
        input_state = 128'h756f4eff4fa31920d1ed670af96db20b;
        round_key = 128'hd9ba5855a34cfdb6839c1f906ec7a37d;
        @(posedge clk);
        assert (output_state == 128'hacd516aaecefe4965271789a97aa1176&& valid_data==1'b1);
        input_state = 128'hc7d365bb57a29d2b381a89d0df8d8a82;
        round_key = 128'h095f5e48d271ae11c8918f0e9379d0df;
        @(posedge clk);
        assert (output_state == 128'hce8c3bf385d3333af08b06de4cf45a5d&& valid_data==1'b1);
        input_state = 128'h84bae717c139da3bbb5477c920a2f7e6;
        round_key = 128'h050c28cba640d57d25dccaed4b1b6990;
        @(posedge clk);
        assert (output_state == 128'h81b6cfdc67790f469e88bd246bb99e76&& valid_data==1'b1);
        input_state = 128'h0cb67a3885c40b860b568a5a7f4e7636;
        round_key = 128'he6a63efb34d790eafc461fe46f3fcf3b;
        @(posedge clk);
        assert (output_state == 128'hea1044c3b1139b6cf71095be1071b90d&& valid_data==1'b1);
        input_state = 128'hea1044c3b1139b6cf71095be1071b90d;
        round_key = 128'he6a63efb34d790eafc461fe46f3fcf3b;
        @(posedge clk);
        assert (output_state == 128'h0cb67a3885c40b860b568a5a7f4e7636&& valid_data==1'b1);
        input_state = 128'h81b6cfdc67790f469e88bd246bb99e76;
        round_key = 128'h050c28cba640d57d25dccaed4b1b6990;
        @(posedge clk);
        assert (output_state == 128'h84bae717c139da3bbb5477c920a2f7e6&& valid_data==1'b1);
        input_state = 128'hce8c3bf385d3333af08b06de4cf45a5d;
        round_key = 128'h095f5e48d271ae11c8918f0e9379d0df;
        @(posedge clk);
        assert (output_state == 128'hc7d365bb57a29d2b381a89d0df8d8a82&& valid_data==1'b1);
        input_state = 128'hacd516aaecefe4965271789a97aa1176;
        round_key = 128'hd9ba5855a34cfdb6839c1f906ec7a37d;
        @(posedge clk);
        assert (output_state == 128'h756f4eff4fa31920d1ed670af96db20b&& valid_data==1'b1);
        input_state = 128'h4c2f784dc8ef3e696f51844c7178fb6a;
        round_key = 128'hef55a1d7db2ef0591ae0211f5be85fd1;
        @(posedge clk);
        assert (output_state == 128'ha37ad99a13c1ce3075b1a5532a90a4bb&& valid_data==1'b1);
        input_state = 128'hefbedcb11aaa45d5a1d8cf1956673d00;
        round_key = 128'he021976b7af6a5e320d0e226ed5bbced;
        @(posedge clk);
        assert (output_state == 128'h0f9f4bda605ce03681082d3fbb3c81ed&& valid_data==1'b1);
        input_state = 128'h24c7477fb595640e7b02d07ac65637b3;
        round_key = 128'hc630f482347b518ec1ced14641087ece;
        @(posedge clk);
        assert (output_state == 128'he2f7b3fd81ee3580bacc013c875e497d&& valid_data==1'b1);
        input_state = 128'h94764f2ceb3b174db7fc077a7d67049d;
        round_key = 128'h631164e09ad732885a2647c5cd8b5ecb;
        @(posedge clk);
        assert (output_state == 128'hf7672bcc71ec25c5edda40bfb0ec5a56&& valid_data==1'b1);
        input_state = 128'h8f71776271ea7b98a9aff8db056ff3a8;
        round_key = 128'hf368eb3ff24ba50cf5b580c880c6af88;
        @(posedge clk);
        assert (output_state == 128'h7c199c5d83a1de945c1a781385a95c20&& valid_data==1'b1);
        input_state = 128'hc8aa900518179e26e9e657671e1d54b0;
        round_key = 128'haea51d24f9c65668c0f1754d97ad190e;
        @(posedge clk);
        assert (output_state == 128'h660f8d21e1d1c84e2917222a89b04dbe&& valid_data==1'b1);
        input_state = 128'h11b74108fdcb6568ae2de1eea59ba347;
        round_key = 128'h62bc40b701234e3307fe25c475732f40;
        @(posedge clk);
        assert (output_state == 128'h730b01bffce82b5ba9d3c42ad0e88c07&& valid_data==1'b1);
        input_state = 128'h5553ba7527ed79c562f58e6b85b8a90f;
        round_key = 128'h332a082d57634b4c39372325575c6c43;
        @(posedge clk);
        assert (output_state == 128'h6679b258708e32895bc2ad4ed2e4c54c&& valid_data==1'b1);
        input_state = 128'h5b526a3defb8472a5262c4807f758778;
        round_key = 128'h2aec5aec639f0e8406dd6bf7728d0a84;
        @(posedge clk);
        assert (output_state == 128'h71be30d18c2749ae54bfaf770df88dfc&& valid_data==1'b1);
        input_state = 128'hbe103f3b3b57acf0c87e4bc96a94f4f7;
        round_key = 128'h73776f72644943616e5468696e6b4f66;
        @(posedge clk);
        assert (output_state == 128'hcd6750495f1eef91a62a23a004ffbb91&& valid_data==1'b1);
        input_state = 128'h1c0d051f26532307172e015254705b5a;
        round_key = 128'h54686973497354686542657374506173;
        @(posedge clk);
        assert (output_state == 128'h48656c6c6f20776f726c642120203a29&& valid_data==1'b1);
        input_state = 128'h00000000000000000000000000000000;
        round_key = 128'h54686973497354686542657374506173;
        @(posedge clk);
        assert (output_state == 128'h54686973497354686542657374506173&& valid_data==1'b1);
        input_state = 128'h087dbfa762c6588bd3be38f75ff71dcd;
        round_key = 128'h73776f72644943616e5468696e6b4f66;
        @(posedge clk);
        assert (output_state == 128'h7b0ad0d5068f1beabdea509e319c52ab&& valid_data==1'b1);
        input_state = 128'he65052874f79ed307acad63598e8f88c;
        round_key = 128'h2aec5aec639f0e8406dd6bf7728d0a84;
        @(posedge clk);
        assert (output_state == 128'hccbc086b2ce6e3b47c17bdc2ea65f208&& valid_data==1'b1);
        input_state = 128'h55f261491f7509144a57b14c8e5bafac;
        round_key = 128'h332a082d57634b4c39372325575c6c43;
        @(posedge clk);
        assert (output_state == 128'h66d869644816425873609269d907c3ef&& valid_data==1'b1);
        input_state = 128'h3fb390f8a2d81b8ec2641d621c7a1cfb;
        round_key = 128'h62bc40b701234e3307fe25c475732f40;
        @(posedge clk);
        assert (output_state == 128'h5d0fd04fa3fb55bdc59a38a6690933bb&& valid_data==1'b1);
        input_state = 128'h64b1681380bbb8765e4ec974ab2e00d2;
        round_key = 128'haea51d24f9c65668c0f1754d97ad190e;
        @(posedge clk);
        assert (output_state == 128'hca147537797dee1e9ebfbc393c8319dc&& valid_data==1'b1);
        input_state = 128'h11b8d011215bb832d6065088e26e77d0;
        round_key = 128'hf368eb3ff24ba50cf5b580c880c6af88;
        @(posedge clk);
        assert (output_state == 128'he2d03b2ed3101d3e23b3d04062a8d858&& valid_data==1'b1);
        input_state = 128'h74ed0cdd2b2e9ac44136f63572b49223;
        round_key = 128'h631164e09ad732885a2647c5cd8b5ecb;
        @(posedge clk);
        assert (output_state == 128'h17fc683db1f9a84c1b10b1f0bf3fcce8&& valid_data==1'b1);
        input_state = 128'h18015477a2bdfd8cb6a32b8895a2a869;
        round_key = 128'hc630f482347b518ec1ced14641087ece;
        @(posedge clk);
        assert (output_state == 128'hde31a0f596c6ac02776dfaced4aad6a7&& valid_data==1'b1);
        input_state = 128'h8c4517066f0f6ab689fa1ba6d8fe3083;
        round_key = 128'he021976b7af6a5e320d0e226ed5bbced;
        @(posedge clk);
        assert (output_state == 128'h6c64806d15f9cf55a92af98035a58c6e&& valid_data==1'b1);
        input_state = 128'h16565ad5de183012866f4b46b55896e9;
        round_key = 128'hef55a1d7db2ef0591ae0211f5be85fd1;
        @(posedge clk);
        assert (output_state == 128'hf903fb020536c04b9c8f6a59eeb0c938&& valid_data==1'b1);
        input_state = 128'h239291b9e98620fd29a9e9ecacc07a34;
        round_key = 128'hd9ba5855a34cfdb6839c1f906ec7a37d;
        @(posedge clk);
        assert (output_state == 128'hfa28c9ec4acadd4baa35f67cc207d949&& valid_data==1'b1);
        input_state = 128'hbf389037ed70634579f2068ac705b8ba;
        round_key = 128'h095f5e48d271ae11c8918f0e9379d0df;
        @(posedge clk);
        assert (output_state == 128'hb667ce7f3f01cd54b1638984547c6865&& valid_data==1'b1);
        input_state = 128'hf209b0936b85699e104eb59836b225e6;
        round_key = 128'h050c28cba640d57d25dccaed4b1b6990;
        @(posedge clk);
        assert (output_state == 128'hf7059858cdc5bce335927f757da94c76&& valid_data==1'b1);
        input_state = 128'h68a6d238bd4f296a96d34611ff6b659d;
        round_key = 128'he6a63efb34d790eafc461fe46f3fcf3b;
        @(posedge clk);
        assert (output_state == 128'h8e00ecc38998b9806a9559f59054aaa6&& valid_data==1'b1);
        input_state = 128'h00000000000000000000000000000001;
        round_key = 128'h54686973497354686542657374506173;
        @(posedge clk);
        assert (output_state == 128'h54686973497354686542657374506172&& valid_data==1'b1);
        input_state = 128'hc7b2f52262c6588bd3be38f75ff71dcd;
        round_key = 128'h73776f72644943616e5468696e6b4f66;
        @(posedge clk);
        assert (output_state == 128'hb4c59a50068f1beabdea509e319c52ab&& valid_data==1'b1);
        input_state = 128'ha5fcfe681f291d90b2895dfdc071394d;
        round_key = 128'h2aec5aec639f0e8406dd6bf7728d0a84;
        @(posedge clk);
        assert (output_state == 128'h8f10a4847cb61314b454360ab2fc33c9&& valid_data==1'b1);
        input_state = 128'hec3d4b7fdc514c6d79d7ba9a3158ae20;
        round_key = 128'h332a082d57634b4c39372325575c6c43;
        @(posedge clk);
        assert (output_state == 128'hdf1743528b32072140e099bf6604c263&& valid_data==1'b1);
        input_state = 128'h570a6c99678b9683f825d312a0944a70;
        round_key = 128'h62bc40b701234e3307fe25c475732f40;
        @(posedge clk);
        assert (output_state == 128'h35b62c2e66a8d8b0ffdbf6d6d5e76530&& valid_data==1'b1);
        input_state = 128'h2ccbdc29cabc43c31d51520a43ca8edd;
        round_key = 128'haea51d24f9c65668c0f1754d97ad190e;
        @(posedge clk);
        assert (output_state == 128'h826ec10d337a15abdda02747d46797d3&& valid_data==1'b1);
        input_state = 128'hf995e0eff94c4a83173a1261d3269e45;
        round_key = 128'hf368eb3ff24ba50cf5b580c880c6af88;
        @(posedge clk);
        assert (output_state == 128'h0afd0bd00b07ef8fe28f92a953e031cd&& valid_data==1'b1);
        input_state = 128'h689ae04274ef5d294b4fba9f31ec721a;
        round_key = 128'h631164e09ad732885a2647c5cd8b5ecb;
        @(posedge clk);
        assert (output_state == 128'h0b8b84a2ee386fa11169fd5afc672cd1&& valid_data==1'b1);
        input_state = 128'h35e7c6520b687d84e640ef232a971f39;
        round_key = 128'hc630f482347b518ec1ced14641087ece;
        @(posedge clk);
        assert (output_state == 128'hf3d732d03f132c0a278e3e656b9f61f7&& valid_data==1'b1);
        input_state = 128'h4752b7085e1d3989b163f879d0bd4464;
        round_key = 128'he021976b7af6a5e320d0e226ed5bbced;
        @(posedge clk);
        assert (output_state == 128'ha773206324eb9c6a91b31a5f3de6f889&& valid_data==1'b1);
        input_state = 128'h9dcf18fa61d4cf9b25467ca5d59445bd;
        round_key = 128'hef55a1d7db2ef0591ae0211f5be85fd1;
        @(posedge clk);
        assert (output_state == 128'h729ab92dbafa3fc23fa65dba8e7c1a6c&& valid_data==1'b1);
        input_state = 128'heb9e0501e599fc2aa98aa69360194c15;
        round_key = 128'hd9ba5855a34cfdb6839c1f906ec7a37d;
        @(posedge clk);
        assert (output_state == 128'h32245d5446d5019c2a16b9030edeef68&& valid_data==1'b1);
        input_state = 128'h509a43ba828ed83664d519c21038e85a;
        round_key = 128'h095f5e48d271ae11c8918f0e9379d0df;
        @(posedge clk);
        assert (output_state == 128'h59c51df250ff7627ac4496cc83413885&& valid_data==1'b1);
        input_state = 128'hb0db44f505e5c6e0cfb70e0c41b8e727;
        round_key = 128'h050c28cba640d57d25dccaed4b1b6990;
        @(posedge clk);
        assert (output_state == 128'hb5d76c3ea3a5139dea6bc4e10aa38eb7&& valid_data==1'b1);
        input_state = 128'hd5061ca90a7f19b2870a505e670e7df8;
        round_key = 128'he6a63efb34d790eafc461fe46f3fcf3b;
        @(posedge clk);
        assert (output_state == 128'h33a022523ea889587b4c4fba0831b2c3&& valid_data==1'b1);
        input_state = 128'h00000000000000000000000000000001;
        round_key = 128'h54686973497354686542657374506173;
        @(posedge clk);
        assert (output_state == 128'h54686973497354686542657374506172&& valid_data==1'b1);
        input_state = 128'hc7b2f52262c6588bd3be38f75ff71dcd;
        round_key = 128'h73776f72644943616e5468696e6b4f66;
        @(posedge clk);
        assert (output_state == 128'hb4c59a50068f1beabdea509e319c52ab&& valid_data==1'b1);
        input_state = 128'ha5fcfe681f291d90b2895dfdc071394d;
        round_key = 128'h2aec5aec639f0e8406dd6bf7728d0a84;
        @(posedge clk);
        assert (output_state == 128'h8f10a4847cb61314b454360ab2fc33c9&& valid_data==1'b1);
        input_state = 128'hec3d4b7fdc514c6d79d7ba9a3158ae20;
        round_key = 128'h332a082d57634b4c39372325575c6c43;
        @(posedge clk);
        assert (output_state == 128'hdf1743528b32072140e099bf6604c263&& valid_data==1'b1);
        input_state = 128'h570a6c99678b9683f825d312a0944a70;
        round_key = 128'h62bc40b701234e3307fe25c475732f40;
        @(posedge clk);
        assert (output_state == 128'h35b62c2e66a8d8b0ffdbf6d6d5e76530&& valid_data==1'b1);
        input_state = 128'h2ccbdc29cabc43c31d51520a43ca8edd;
        round_key = 128'haea51d24f9c65668c0f1754d97ad190e;
        @(posedge clk);
        assert (output_state == 128'h826ec10d337a15abdda02747d46797d3&& valid_data==1'b1);
        input_state = 128'hf995e0eff94c4a83173a1261d3269e45;
        round_key = 128'hf368eb3ff24ba50cf5b580c880c6af88;
        @(posedge clk);
        assert (output_state == 128'h0afd0bd00b07ef8fe28f92a953e031cd&& valid_data==1'b1);
        input_state = 128'h689ae04274ef5d294b4fba9f31ec721a;
        round_key = 128'h631164e09ad732885a2647c5cd8b5ecb;
        @(posedge clk);
        assert (output_state == 128'h0b8b84a2ee386fa11169fd5afc672cd1&& valid_data==1'b1);
        input_state = 128'h35e7c6520b687d84e640ef232a971f39;
        round_key = 128'hc630f482347b518ec1ced14641087ece;
        @(posedge clk);
        assert (output_state == 128'hf3d732d03f132c0a278e3e656b9f61f7&& valid_data==1'b1);
        input_state = 128'h4752b7085e1d3989b163f879d0bd4464;
        round_key = 128'he021976b7af6a5e320d0e226ed5bbced;
        @(posedge clk);
        assert (output_state == 128'ha773206324eb9c6a91b31a5f3de6f889&& valid_data==1'b1);
        input_state = 128'h9dcf18fa61d4cf9b25467ca5d59445bd;
        round_key = 128'hef55a1d7db2ef0591ae0211f5be85fd1;
        @(posedge clk);
        assert (output_state == 128'h729ab92dbafa3fc23fa65dba8e7c1a6c&& valid_data==1'b1);
        input_state = 128'heb9e0501e599fc2aa98aa69360194c15;
        round_key = 128'hd9ba5855a34cfdb6839c1f906ec7a37d;
        @(posedge clk);
        assert (output_state == 128'h32245d5446d5019c2a16b9030edeef68&& valid_data==1'b1);
        input_state = 128'h509a43ba828ed83664d519c21038e85a;
        round_key = 128'h095f5e48d271ae11c8918f0e9379d0df;
        @(posedge clk);
        assert (output_state == 128'h59c51df250ff7627ac4496cc83413885&& valid_data==1'b1);
        input_state = 128'hb0db44f505e5c6e0cfb70e0c41b8e727;
        round_key = 128'h050c28cba640d57d25dccaed4b1b6990;
        @(posedge clk);
        assert (output_state == 128'hb5d76c3ea3a5139dea6bc4e10aa38eb7&& valid_data==1'b1);
        input_state = 128'hd5061ca90a7f19b2870a505e670e7df8;
        round_key = 128'he6a63efb34d790eafc461fe46f3fcf3b;
        @(posedge clk);
        assert (output_state == 128'h33a022523ea889587b4c4fba0831b2c3&& valid_data==1'b1);
        
        $stop;
        $finish;
    end
    
    //set up clock
    always #1 clk = ~clk;
    
endmodule
